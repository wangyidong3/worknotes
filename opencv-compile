
===== when compile error occurs, use make VERBOSE=1 to see detail! =====

https://www.learnopencv.com/install-opencv3-on-ubuntu/     <<<<<<<

sudo apt-get install -y build-essential checkinstall cmake pkg-config yasm gfortran git libjpeg8-dev libjasper-dev libpng12-dev python2.7-dev python-pip


# If you are using Ubuntu 14.04
sudo apt-get install libtiff4-dev
# If you are using Ubuntu 16.04
sudo apt-get install libtiff5-dev

sudo apt-get install -y libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libxine2-dev libv4l-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev  libqt4-dev libgtk2.0-dev libtbb-dev libatlas-base-dev libfaac-dev libmp3lame-dev libtheora-dev libvorbis-dev libxvidcore-dev libopencore-amrnb-dev libopencore-amrwb-dev x264 v4l-utils libprotobuf-dev protobuf-compiler libgoogle-glog-dev libgflags-dev libgphoto2-dev libeigen3-dev libhdf5-dev doxygen build-essential cmake pkg-config libjpeg8-dev libtiff5-dev libjasper-dev libpng12-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libgtk-3-dev libatlas-base-dev gfortran
sudo -H pip2 install -U pip numpy


git clone https://github.com/opencv/opencv.git
cd opencv 
git checkout 3.3.0 
cd ..

git clone https://github.com/opencv/opencv_contrib.git
cd opencv_contrib
git checkout 3.3.0
cd ..

--------------for cuda on desktop----------------

https://askubuntu.com/questions/372248/downloaded-g-4-8-from-the-ppa-but-cant-set-it-as-default
https://askubuntu.com/questions/26498/choose-gcc-and-g-version

update-alternatives --query gcc

cd builm
rm -rf *

======= current use ===================
 cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D INSTALL_C_EXAMPLES=OFF \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D WITH_V4L=ON \
    -D WITH_CUDA=ON \
    -D ENABLE_FAST_MATH=1 \
    -D CUDA_FAST_MATH=1 \
    -D WITH_CUBLAS=1 \
    -D CUDA_GENERATION=Auto \
    -D CUDA_NVCC_FLAGS="-D_FORCE_INLINES" \
    -D WITH_CUFFT=ON \
    -D WITH_EIGEN=ON \
    -D WITH_IPP=ON \
    -D BUILD_TIFF=ON \
    -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
    -D BUILD_EXAMPLES=ON ..

cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_C_EXAMPLES=OFF \
    -D INSTALL_PYTHON_EXAMPLES=OFF \
    -D WITH_V4L=ON \
    -D WITH_CUDA=ON \
    -D ENABLE_FAST_MATH=1 \
    -D CUDA_FAST_MATH=1 \
    -D WITH_CUBLAS=1 \
    -D CUDA_GENERATION=Auto \
    -D CUDA_NVCC_FLAGS="-D_FORCE_INLINES" \
    -D WITH_CUFFT=ON \
    -D WITH_EIGEN=ON \
    -D WITH_IPP=ON \
    -D BUILD_TIFF=ON \
    -D WITH_OPENCL=ON \
    -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
    -D BUILD_EXAMPLES=OFF ..


to support CUDA:
1. use gcc-5.4 (I used 4.9 on 26.9.2017) <<<< cuda8.0 patch can support 5.4!
2. https://stackoverflow.com/questions/45616432/opencv-cant-make-with-vtk-on
3. https://github.com/opencv/opencv/issues/8704  <<<<< can be important to support c++11 for cuda, should  remove the "
CMAKE_CXX_FLAGS:STRING=-std=c++11
CUDA_NVCC_FLAGS:STRING=-D_FORCE_INLINES;-std=c++11;--expt-relaxed-constexpr
CUDA_PROPAGATE_HOST_FLAGS:BOOL=OFF


------------------------- opencl on nuc -----------------

===== when compile error occurs, use make VERBOSE=1 to see detail! =====

cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D INSTALL_C_EXAMPLES=OFF \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D WITH_V4L=ON \
    -D WITH_EIGEN=ON \
    -D WITH_IPP=ON \
    -D BUILD_TIFF=ON \
    -DWITH_OPENCL=ON \
    -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
    -D BUILD_EXAMPLES=ON ..
 
 =====python check opencl========== 
 https://stackoverflow.com/questions/42680645/opencv-3-2-0-windows-opencl-shows-devices-in-c-but-not-in-python
 https://github.com/intel-iot-devkit/Video-Analytics-OpenCV/ <<<<<< very good sample code for test
import cv2        

print(cv2.ocl.haveOpenCL())
cv2.ocl.setUseOpenCL(True)
print(cv2.ocl.useOpenCL())    
print(cv2.ocl.haveAmdBlas())
print(cv2.ocl.haveAmdFft())
    
=======================
In case, python has malloc issues: https://github.com/tensorflow/tensorflow/issues/6968

sudo apt-get install libtcmalloc-minimal4
export LD_PRELOAD="/usr/lib/libtcmalloc_minimal.so.4"
or
sudo apt-get install libopenblas-dev 
pip install --no-binary=:all: numpy


=========================sometimes for debug , can compile without examples ===============
cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_PYTHON_EXAMPLES=OFF \
    -D INSTALL_C_EXAMPLES=OFF \
    -D INSTALL_PYTHON_EXAMPLES=OFF \
    -D WITH_V4L=ON \
    -D WITH_EIGEN=ON \
    -D WITH_IPP=ON \
    -D BUILD_TIFF=ON \
    -DWITH_OPENCL=ON \
    -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
    -D BUILD_EXAMPLES=ON ..
    
    
At last:
sudo sh -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf'
sudo ldconfig
